From adf30907d63893e4208dfe3f5c88ae12bc2f25d5 Mon Sep 17 00:00:00 2001
From: Eric Dumazet <eric.dumazet@gmail.com>
Date: Tue, 2 Jun 2009 05:19:30 +0000
Subject: [PATCH] net: skb->dst accessors

Define three accessors to get/set dst attached to a skb

struct dst_entry *skb_dst(const struct sk_buff *skb)

void skb_dst_set(struct sk_buff *skb, struct dst_entry *dst)

void skb_dst_drop(struct sk_buff *skb)
This one should replace occurrences of :
dst_release(skb->dst)
skb->dst = NULL;

Delete skb->dst field

Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 drivers/infiniband/ulp/ipoib/ipoib_cm.c        |    4 +-
 drivers/infiniband/ulp/ipoib/ipoib_main.c      |   30 ++++++------
 drivers/infiniband/ulp/ipoib/ipoib_multicast.c |   10 ++--
 drivers/net/pppol2tp.c                         |   11 ++--
 drivers/s390/net/qeth_core_main.c              |    4 +-
 drivers/s390/net/qeth_l3_main.c                |    8 ++--
 include/linux/skbuff.h                         |   13 ++++-
 include/net/dst.h                              |   12 ++++-
 include/net/inet6_hashtables.h                 |    2 +-
 include/net/inet_hashtables.h                  |    2 +-
 include/net/ip6_route.h                        |    2 +-
 include/net/xfrm.h                             |    4 +-
 net/atm/br2684.c                               |    2 +-
 net/atm/clip.c                                 |   14 +++---
 net/bridge/br_netfilter.c                      |   18 +++----
 net/core/dev.c                                 |    7 +--
 net/core/neighbour.c                           |   11 ++--
 net/core/skbuff.c                              |    4 +-
 net/dccp/ipv4.c                                |    4 +-
 net/dccp/ipv6.c                                |    8 ++-
 net/dccp/output.c                              |    2 +-
 net/decnet/af_decnet.c                         |    6 ++-
 net/decnet/dn_neigh.c                          |    8 ++--
 net/decnet/dn_nsp_out.c                        |    6 +-
 net/decnet/dn_route.c                          |   25 +++++-----
 net/ipv4/arp.c                                 |    2 +-
 net/ipv4/icmp.c                                |   10 ++--
 net/ipv4/igmp.c                                |    4 +-
 net/ipv4/ip_forward.c                          |    4 +-
 net/ipv4/ip_fragment.c                         |    2 +-
 net/ipv4/ip_gre.c                              |   23 ++++-----
 net/ipv4/ip_input.c                            |    6 +-
 net/ipv4/ip_options.c                          |    6 +-
 net/ipv4/ip_output.c                           |   20 ++++----
 net/ipv4/ipip.c                                |   13 ++---
 net/ipv4/ipmr.c                                |   13 ++---
 net/ipv4/netfilter.c                           |   28 ++++++-----
 net/ipv4/netfilter/ipt_REJECT.c                |    7 +--
 net/ipv4/netfilter/nf_nat_standalone.c         |    7 +--
 net/ipv4/raw.c                                 |    2 +-
 net/ipv4/route.c                               |   14 +++---
 net/ipv4/tcp_ipv4.c                            |    4 +-
 net/ipv4/tcp_output.c                          |    2 +-
 net/ipv4/udp.c                                 |    4 +-
 net/ipv4/xfrm4_input.c                         |    2 +-
 net/ipv4/xfrm4_mode_tunnel.c                   |    4 +-
 net/ipv4/xfrm4_output.c                        |    6 +-
 net/ipv6/exthdrs.c                             |   40 ++++++++--------
 net/ipv6/inet6_connection_sock.c               |    2 +-
 net/ipv6/ip6_input.c                           |   12 ++--
 net/ipv6/ip6_output.c                          |   60 ++++++++++++------------
 net/ipv6/ip6_tunnel.c                          |   26 +++++------
 net/ipv6/ip6mr.c                               |   13 ++---
 net/ipv6/mcast.c                               |   17 ++++---
 net/ipv6/ndisc.c                               |    4 +-
 net/ipv6/netfilter.c                           |   16 ++++--
 net/ipv6/netfilter/ip6t_REJECT.c               |    2 +-
 net/ipv6/raw.c                                 |    2 +-
 net/ipv6/reassembly.c                          |   22 ++++----
 net/ipv6/route.c                               |   12 ++--
 net/ipv6/sit.c                                 |   21 ++++----
 net/ipv6/tcp_ipv6.c                            |    8 ++-
 net/ipv6/udp.c                                 |    7 +--
 net/ipv6/xfrm6_mode_tunnel.c                   |    4 +-
 net/ipv6/xfrm6_output.c                        |    4 +-
 net/netfilter/ipvs/ip_vs_xmit.c                |   48 +++++++++---------
 net/netfilter/nf_conntrack_proto_gre.c         |    2 +-
 net/netfilter/xt_TCPMSS.c                      |    6 +-
 net/netfilter/xt_policy.c                      |    2 +-
 net/netfilter/xt_realm.c                       |    2 +-
 net/packet/af_packet.c                         |    6 +--
 net/sched/cls_flow.c                           |    8 ++--
 net/sched/cls_route.c                          |    2 +-
 net/sched/em_meta.c                            |    4 +-
 net/sched/sch_sfq.c                            |    2 +-
 net/sched/sch_teql.c                           |    6 +-
 net/sctp/output.c                              |    6 +-
 net/sunrpc/xprtsock.c                          |    2 +-
 net/xfrm/xfrm_input.c                          |    3 +-
 net/xfrm/xfrm_output.c                         |   21 ++++----
 net/xfrm/xfrm_policy.c                         |    8 +++-
 security/selinux/hooks.c                       |    2 +-
 security/selinux/xfrm.c                        |    2 +-
 83 files changed, 414 insertions(+), 390 deletions(-)

diff --git a/drivers/infiniband/ulp/ipoib/ipoib_cm.c b/drivers/infiniband/ulp/ipoib/ipoib_cm.c
index 4248c31..181b1f3 100644
--- a/drivers/infiniband/ulp/ipoib/ipoib_cm.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_cm.c
@@ -1394,8 +1394,8 @@ void ipoib_cm_skb_too_long(struct net_device *dev, struct sk_buff *skb,
 	struct ipoib_dev_priv *priv = netdev_priv(dev);
 	int e = skb_queue_empty(&priv->cm.skb_queue);

-	if (skb->dst)
-		skb->dst->ops->update_pmtu(skb->dst, mtu);
+	if (skb_dst(skb))
+		skb_dst(skb)->ops->update_pmtu(skb_dst(skb), mtu);

 	skb_queue_tail(&priv->cm.skb_queue, skb);
 	if (e)
diff --git a/drivers/infiniband/ulp/ipoib/ipoib_main.c b/drivers/infiniband/ulp/ipoib/ipoib_main.c
index 69c6304..e319d91 100644
--- a/drivers/infiniband/ulp/ipoib/ipoib_main.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_main.c
@@ -561,7 +561,7 @@ static void neigh_add_path(struct sk_buff *skb, struct net_device *dev)
 	struct ipoib_neigh *neigh;
 	unsigned long flags;

-	neigh = ipoib_neigh_alloc(skb->dst->neighbour, skb->dev);
+	neigh = ipoib_neigh_alloc(skb_dst(skb)->neighbour, skb->dev);
 	if (!neigh) {
 		++dev->stats.tx_dropped;
 		dev_kfree_skb_any(skb);
@@ -570,9 +570,9 @@ static void neigh_add_path(struct sk_buff *skb, struct net_device *dev)

 	spin_lock_irqsave(&priv->lock, flags);

-	path = __path_find(dev, skb->dst->neighbour->ha + 4);
+	path = __path_find(dev, skb_dst(skb)->neighbour->ha + 4);
 	if (!path) {
-		path = path_rec_create(dev, skb->dst->neighbour->ha + 4);
+		path = path_rec_create(dev, skb_dst(skb)->neighbour->ha + 4);
 		if (!path)
 			goto err_path;

@@ -605,7 +605,7 @@ static void neigh_add_path(struct sk_buff *skb, struct net_device *dev)
 				goto err_drop;
 			}
 		} else
-			ipoib_send(dev, skb, path->ah, IPOIB_QPN(skb->dst->neighbour->ha));
+			ipoib_send(dev, skb, path->ah, IPOIB_QPN(skb_dst(skb)->neighbour->ha));
 	} else {
 		neigh->ah  = NULL;

@@ -635,15 +635,15 @@ static void ipoib_path_lookup(struct sk_buff *skb, struct net_device *dev)
 	struct ipoib_dev_priv *priv = netdev_priv(skb->dev);

 	/* Look up path record for unicasts */
-	if (skb->dst->neighbour->ha[4] != 0xff) {
+	if (skb_dst(skb)->neighbour->ha[4] != 0xff) {
 		neigh_add_path(skb, dev);
 		return;
 	}

 	/* Add in the P_Key for multicasts */
-	skb->dst->neighbour->ha[8] = (priv->pkey >> 8) & 0xff;
-	skb->dst->neighbour->ha[9] = priv->pkey & 0xff;
-	ipoib_mcast_send(dev, skb->dst->neighbour->ha + 4, skb);
+	skb_dst(skb)->neighbour->ha[8] = (priv->pkey >> 8) & 0xff;
+	skb_dst(skb)->neighbour->ha[9] = priv->pkey & 0xff;
+	ipoib_mcast_send(dev, skb_dst(skb)->neighbour->ha + 4, skb);
 }

 static void unicast_arp_send(struct sk_buff *skb, struct net_device *dev,
@@ -708,16 +708,16 @@ static int ipoib_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	struct ipoib_neigh *neigh;
 	unsigned long flags;

-	if (likely(skb->dst && skb->dst->neighbour)) {
-		if (unlikely(!*to_ipoib_neigh(skb->dst->neighbour))) {
+	if (likely(skb_dst(skb) && skb_dst(skb)->neighbour)) {
+		if (unlikely(!*to_ipoib_neigh(skb_dst(skb)->neighbour))) {
 			ipoib_path_lookup(skb, dev);
 			return NETDEV_TX_OK;
 		}

-		neigh = *to_ipoib_neigh(skb->dst->neighbour);
+		neigh = *to_ipoib_neigh(skb_dst(skb)->neighbour);

 		if (unlikely((memcmp(&neigh->dgid.raw,
-				     skb->dst->neighbour->ha + 4,
+				     skb_dst(skb)->neighbour->ha + 4,
 				     sizeof(union ib_gid))) ||
 			     (neigh->dev != dev))) {
 			spin_lock_irqsave(&priv->lock, flags);
@@ -743,7 +743,7 @@ static int ipoib_start_xmit(struct sk_buff *skb, struct net_device *dev)
 				return NETDEV_TX_OK;
 			}
 		} else if (neigh->ah) {
-			ipoib_send(dev, skb, neigh->ah, IPOIB_QPN(skb->dst->neighbour->ha));
+			ipoib_send(dev, skb, neigh->ah, IPOIB_QPN(skb_dst(skb)->neighbour->ha));
 			return NETDEV_TX_OK;
 		}

@@ -772,7 +772,7 @@ static int ipoib_start_xmit(struct sk_buff *skb, struct net_device *dev)
 			if ((be16_to_cpup((__be16 *) skb->data) != ETH_P_ARP) &&
 			    (be16_to_cpup((__be16 *) skb->data) != ETH_P_RARP)) {
 				ipoib_warn(priv, "Unicast, no %s: type %04x, QPN %06x %pI6\n",
-					   skb->dst ? "neigh" : "dst",
+					   skb_dst(skb) ? "neigh" : "dst",
 					   be16_to_cpup((__be16 *) skb->data),
 					   IPOIB_QPN(phdr->hwaddr),
 					   phdr->hwaddr + 4);
@@ -817,7 +817,7 @@ static int ipoib_hard_header(struct sk_buff *skb,
 	 * destination address onto the front of the skb so we can
 	 * figure out where to send the packet later.
 	 */
-	if ((!skb->dst || !skb->dst->neighbour) && daddr) {
+	if ((!skb_dst(skb) || !skb_dst(skb)->neighbour) && daddr) {
 		struct ipoib_pseudoheader *phdr =
 			(struct ipoib_pseudoheader *) skb_push(skb, sizeof *phdr);
 		memcpy(phdr->hwaddr, daddr, INFINIBAND_ALEN);
diff --git a/drivers/infiniband/ulp/ipoib/ipoib_multicast.c b/drivers/infiniband/ulp/ipoib/ipoib_multicast.c
index 425e311..a0e9753 100644
--- a/drivers/infiniband/ulp/ipoib/ipoib_multicast.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_multicast.c
@@ -261,7 +261,7 @@ static int ipoib_mcast_join_finish(struct ipoib_mcast *mcast,

 		skb->dev = dev;

-		if (!skb->dst || !skb->dst->neighbour) {
+		if (!skb_dst(skb) || !skb_dst(skb)->neighbour) {
 			/* put pseudoheader back on for next time */
 			skb_push(skb, sizeof (struct ipoib_pseudoheader));
 		}
@@ -707,10 +707,10 @@ void ipoib_mcast_send(struct net_device *dev, void *mgid, struct sk_buff *skb)

 out:
 	if (mcast && mcast->ah) {
-		if (skb->dst		&&
-		    skb->dst->neighbour &&
-		    !*to_ipoib_neigh(skb->dst->neighbour)) {
-			struct ipoib_neigh *neigh = ipoib_neigh_alloc(skb->dst->neighbour,
+		if (skb_dst(skb)		&&
+		    skb_dst(skb)->neighbour &&
+		    !*to_ipoib_neigh(skb_dst(skb)->neighbour)) {
+			struct ipoib_neigh *neigh = ipoib_neigh_alloc(skb_dst(skb)->neighbour,
 									skb->dev);

 			if (neigh) {
